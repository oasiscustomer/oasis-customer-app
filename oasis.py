# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IB86aqF8JjCHaMrFHhoaDmbFxtJ5DkyJ
"""

# -*- coding: utf-8 -*-
"""
oasis.py

Streamlit Cloud에서 배포 가능한 고객관리 웹앱 (Google Sheets 연동 + 차량 번호판 인식)
"""

import os
import pytesseract
import shutil
import cv2
import re
import gspread
import streamlit as st
from google.oauth2 import service_account
from PIL import Image
import tempfile

# ✅ Tesseract 실행 파일 경로 확인 및 설정
tesseract_path = shutil.which("tesseract")
if tesseract_path:
    pytesseract.pytesseract.tesseract_cmd = tesseract_path
    st.info(f"✅ Tesseract 실행 경로: {tesseract_path}")
else:
    pytesseract.pytesseract.tesseract_cmd = None
    st.warning("🚨 Tesseract 실행 파일을 찾을 수 없습니다. OCR 기능이 제한됩니다.")

# ✅ OCR 함수 정의
def recognize_license_plate(image_path):
    if pytesseract.pytesseract.tesseract_cmd is None:
        return "Tesseract 실행 불가"
    try:
        img = cv2.imread(image_path)
        if img is None:
            return "이미지 오류"
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        plate_text = pytesseract.image_to_string(gray, lang='eng')
        plate_number_match = re.findall(r'\d{2,3}[가-힣]\d{4}', plate_text)
        return plate_number_match[0] if plate_number_match else "번호판 인식 실패"
    except Exception as e:
        return f"OCR 오류: {e}"

# ✅ Streamlit 앱 시작
st.title("🚗 세차장 고객 관리 시스템")
st.write("📸 차량 사진을 업로드하고 고객 정보를 확인하세요.")

# ✅ 1. JSON 키 업로드
st.subheader("1️⃣ Google Sheets API 키 파일 업로드")
json_key_path = None
uploaded_key = st.file_uploader("🔑 Google Cloud에서 다운로드한 JSON 키 파일을 업로드하세요.", type=["json"])
if uploaded_key is not None:
    with tempfile.NamedTemporaryFile(delete=False, suffix=".json") as temp_key_file:
        temp_key_file.write(uploaded_key.getbuffer())
        json_key_path = temp_key_file.name
        st.success("✅ 키 파일 업로드 완료")

if not json_key_path:
    st.stop()

# ✅ 2. Google Sheets 인증
try:
    credentials = service_account.Credentials.from_service_account_file(
        json_key_path,
        scopes=["https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/drive"]
    )
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").worksheet("시트1")
    st.success("✅ Google Sheets 연결 성공!")
except Exception as e:
    st.error(f"🚨 Google Sheets 인증 실패: {e}")
    st.stop()

# ✅ 3. 차량 이미지 업로드 및 OCR 실행
st.subheader("2️⃣ 차량 사진 업로드")
uploaded_image = st.file_uploader("📸 차량 사진을 업로드하세요.", type=["jpg", "jpeg", "png"])
if uploaded_image is not None:
    image = Image.open(uploaded_image)
    st.image(image, caption="업로드된 이미지", use_container_width=True)

    with tempfile.NamedTemporaryFile(delete=False, suffix=".jpg") as temp_image:
        temp_image.write(uploaded_image.getbuffer())
        temp_image_path = temp_image.name

    plate_number = recognize_license_plate(temp_image_path)
    st.write(f"🚗 최종 차량 번호: `{plate_number}`")

    if plate_number == "번호판 인식 실패" or plate_number.startswith("OCR"):
        plate_number = st.text_input("🚨 번호판 인식 실패! 차량 번호를 직접 입력하세요:")

    if plate_number and plate_number not in ["", "Tesseract 실행 불가"]:
        # ✅ 기존 고객 확인 및 신규 등록
        records = worksheet.get_all_records()
        customer = next((r for r in records if r.get("Vehicle number") == plate_number), None)

        if customer:
            st.success("✅ 기존 고객입니다. 방문 기록을 업데이트합니다.")
            # 기존 방문기록에 새로운 방문 추가
            from datetime import datetime
            now = datetime.now().strftime("%Y-%m-%d %H:%M")
            row_index = records.index(customer) + 2  # 헤더 제외 + 1-indexed
            visit_log = customer.get("방문기록", "") + f", {now} (1)"
            worksheet.update(f"F{row_index}", visit_log)
            worksheet.update(f"D{row_index}", now.split()[0])
            worksheet.update(f"E{row_index}", int(customer.get("총 방문 횟수", 0)) + 1)
        else:
            phone_number = st.text_input("📞 신규 고객입니다. 전화번호를 입력하세요:")
            if st.button("🚗 신규 고객 등록") and phone_number:
                from datetime import datetime
                now = datetime.now().strftime("%Y-%m-%d %H:%M")
                new_row = [plate_number, phone_number, now.split()[0], now.split()[0], 1, f"{now} (1)"]
                worksheet.append_row(new_row)
                st.success(f"✅ 신규 고객이 등록되었습니다: {plate_number}")