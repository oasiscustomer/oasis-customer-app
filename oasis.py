# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py
세차장 고객 관리 시스템 (Streamlit WebApp)
- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
- 한국 표준시(KST) 적용
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import pytz
import re
import json

# ✅ KST 시간대 설정
kst = pytz.timezone("Asia/Seoul")

# ✅ 인증 처리
try:
    credentials = Credentials.from_service_account_info(
        st.secrets["gcp_service_account"],
        scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
    )
except Exception as e:
    st.error(f"🔐 인증 오류: {e}")
    st.stop()

# ✅ Google Sheets 연동
try:
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").sheet1
except Exception as e:
    st.error(f"🚨 Google Sheets 연결 오류: {e}")
    st.stop()

# ✅ 페이지 UI
st.title("🚗 세차장 고객 관리 시스템")
st.markdown("""
- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
""")

# ✅ 세션 초기화
if "search_done" not in st.session_state:
    st.session_state.search_done = False
if "matched_records" not in st.session_state:
    st.session_state.matched_records = []
if "selected_car" not in st.session_state:
    st.session_state.selected_car = None
if "duplicate_check" not in st.session_state:
    st.session_state.duplicate_check = None

# ✅ 차량번호 입력
st.subheader("2️⃣ 고객 차량 정보 입력")
plate_input = st.text_input("🔍 차량 번호 (전체 또는 끝 4자리)")

if st.button("🔍 확인") and plate_input:
    try:
        records = worksheet.get_all_records()
    except Exception as e:
        st.error(f"❌ 데이터 로딩 실패: {e}")
        st.stop()

    matched = []
    for r in records:
        try:
            plate = r.get("차량번호", "")
            if plate_input in plate or plate.endswith(plate_input):
                matched.append(r)
        except:
            continue

    st.session_state.search_done = True
    st.session_state.matched_records = matched
    st.session_state.selected_car = None
    st.session_state.duplicate_check = None

if st.session_state.search_done:
    matched = st.session_state.matched_records

    if len(matched) == 0:
        st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
        new_plate = st.text_input("🚘 전체 차량번호", key="new_plate")
        new_phone = st.text_input("📞 고객 전화번호", key="new_phone")

        if new_plate:
            # 중복 확인
            all_records = worksheet.get_all_records()
            same_today = [r for r in all_records if r.get("차량번호") == new_plate and r.get("마지막 방문날짜") == datetime.now(kst).strftime("%Y-%m-%d")]

            if same_today:
                st.warning("📌 오늘 이미 입력된 차량입니다. 추가 입력할까요?")
                dup_confirm = st.radio("입력 확인", ["Y", "N"], key="new_confirm")
                if dup_confirm == "Y":
                    if st.button("✅ 확인", key="new_save_button"):
                        now = datetime.now(kst).strftime("%Y-%m-%d %H:%M")
                        row = [new_plate, new_phone, now.split()[0], now.split()[0], 1, f"{now} (1)"]
                        worksheet.append_row(row)
                        st.success("✅ 신규 고객 등록 완료")
                elif dup_confirm == "N":
                    st.info("🚫 입력이 취소되었습니다.")
            else:
                if st.button("📥 신규 고객 등록"):
                    now = datetime.now(kst).strftime("%Y-%m-%d %H:%M")
                    row = [new_plate, new_phone, now.split()[0], now.split()[0], 1, f"{now} (1)"]
                    worksheet.append_row(row)
                    st.success("✅ 신규 고객 등록 완료")

    elif len(matched) == 1:
        customer = matched[0]
        plate_number = customer.get("차량번호")
        st.success("✅ 기존 고객 확인됨. 방문 기록을 자동으로 업데이트합니다.")

        # 중복 방문 확인
        today = datetime.now(kst).strftime("%Y-%m-%d")
        if customer.get("마지막 방문날짜") == today:
            st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
            confirm = st.radio("입력 확인", ["Y", "N"], key="dup_check")
            if confirm == "Y" and st.button("✅ 확인", key="dup_submit"):
                idx = worksheet.get_all_records().index(customer) + 2
                now = datetime.now(kst).strftime("%Y-%m-%d %H:%M")
                old_log = customer.get("방문기록", "")
                new_log = old_log + f", {now} (1)" if old_log else f"{now} (1)"
                worksheet.update(f"D{idx}", today)
                worksheet.update(f"E{idx}", int(customer.get("총 방문 횟수", 0)) + 1)
                worksheet.update(f"F{idx}", new_log)
                st.success("📅 방문 정보가 성공적으로 업데이트되었습니다.")
        elif customer.get("마지막 방문날짜") != today:
            if st.button("📅 오늘 방문 기록 추가"):
                idx = worksheet.get_all_records().index(customer) + 2
                now = datetime.now(kst).strftime("%Y-%m-%d %H:%M")
                old_log = customer.get("방문기록", "")
                new_log = old_log + f", {now} (1)" if old_log else f"{now} (1)"
                worksheet.update(f"D{idx}", today)
                worksheet.update(f"E{idx}", int(customer.get("총 방문 횟수", 0)) + 1)
                worksheet.update(f"F{idx}", new_log)
                st.success("📅 방문 정보가 성공적으로 업데이트되었습니다.")

    elif len(matched) > 1:
        st.warning("🚗 여러 고객이 있습니다. 선택하세요")
        selected = st.selectbox("차량번호 선택", [r["차량번호"] for r in matched])
        if selected:
            selected_customer = next((r for r in matched if r["차량번호"] == selected), None)
            st.session_state.selected_car = selected_customer

        customer = st.session_state.selected_car
        if customer:
            today = datetime.now(kst).strftime("%Y-%m-%d")
            if customer.get("마지막 방문날짜") == today:
                st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
                confirm = st.radio("입력 확인", ["Y", "N"], key="multi_dup")
                if confirm == "Y" and st.button("✅ 확인", key="multi_dup_submit"):
                    idx = worksheet.get_all_records().index(customer) + 2
                    now = datetime.now(kst).strftime("%Y-%m-%d %H:%M")
                    old_log = customer.get("방문기록", "")
                    new_log = old_log + f", {now} (1)" if old_log else f"{now} (1)"
                    worksheet.update(f"D{idx}", today)
                    worksheet.update(f"E{idx}", int(customer.get("총 방문 횟수", 0)) + 1)
                    worksheet.update(f"F{idx}", new_log)
                    st.success("📅 방문 정보가 성공적으로 업데이트되었습니다.")