# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import pytz

# ✅ 한국 시간대 설정
tz = pytz.timezone("Asia/Seoul")
now = datetime.now(tz)
today = now.strftime("%Y-%m-%d")
now_str = now.strftime("%Y-%m-%d %H:%M")

# ✅ Google 인증
scopes = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive"
]
credentials = Credentials.from_service_account_info(
    st.secrets["gcp_service_account"],
    scopes=scopes
)
client = gspread.authorize(credentials)
worksheet = client.open("Oasis Customer Management").sheet1

# ✅ 전화번호 포맷 함수
def format_phone_number(phone: str) -> str:
    phone = phone.replace("-", "").strip()
    if len(phone) == 11 and phone.startswith("010"):
        return f"{phone[:3]}-{phone[3:7]}-{phone[7:]}"
    elif len(phone) == 10:
        return f"{phone[:3]}-{phone[3:6]}-{phone[6:]}"
    else:
        return phone

# ✅ 세션 상태 초기화
for key in ["matched_customers", "selected_plate", "confirmation_mode", "confirm_update", "new_plate", "new_phone"]:
    if key not in st.session_state:
        st.session_state[key] = None if key.startswith("selected") else ""

# ✅ UI
st.markdown("<h1 style='text-align: center; font-size: 22px;'>🚗 세차장 고객 관리 시스템</h1>", unsafe_allow_html=True)
st.markdown("<h4>2️⃣ 고객 차량 정보 입력</h4>", unsafe_allow_html=True)

# ✅ 차량 번호 검색 Form
with st.form("search_form"):
    plate_input = st.text_input("🔎 차량 번호 (전체 또는 끝 4자리)", key="search_plate")
    search_submit = st.form_submit_button("🔍 확인")

if search_submit and st.session_state.search_plate:
    records = worksheet.get_all_records()
    matched = [
        r for r in records
        if st.session_state.search_plate in str(r.get("차량번호", "")) or
           str(r.get("차량번호", "")).endswith(st.session_state.search_plate)
    ]
    st.session_state.matched_customers = matched
    st.session_state.selected_plate = None
    st.session_state.confirmation_mode = False
    st.session_state.confirm_update = None

# ✅ 검색 결과 처리
matched = st.session_state.matched_customers
if matched:
    plate_options = [r['차량번호'] for r in matched]
    selected_plate = st.selectbox("📋 전체 차량번호 중에서 선택하세요", plate_options)
    selected_record = next((r for r in matched if r['차량번호'] == selected_plate), None)
    st.session_state.selected_plate = selected_plate

    # ✅ 선택된 차량번호가 사용자가 입력한 값과 정확히 일치해야 기존 고객 처리
    if selected_plate == st.session_state.search_plate:
        customer = selected_record
        visit_log = customer.get("방문기록", "")
        if today in visit_log:
            st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
            choice = st.radio("입력 확인", ["Y", "N"], key="repeat_choice")
            if st.button("✅ 확인"):
                if choice == "Y":
                    st.session_state.confirm_update = True
                    st.session_state.confirmation_mode = True
                else:
                    st.stop()
        else:
            st.session_state.confirm_update = True
            st.session_state.confirmation_mode = True

        # ✅ 방문 기록 업데이트
        if st.session_state.confirm_update and st.session_state.confirmation_mode:
            all_records = worksheet.get_all_records()
            row_idx = next((i + 2 for i, r in enumerate(all_records) if r['차량번호'] == customer['차량번호']), None)
            if row_idx:
                prev_count = int(customer.get("총 방문 횟수", 0))
                new_count = prev_count + 1
                old_log = customer.get("방문기록", "")
                new_log = f"{old_log}, {now_str} (1)" if old_log else f"{now_str} (1)"
                try:
                    worksheet.update(f"D{row_idx}", [[today]])
                    worksheet.update(f"E{row_idx}", [[new_count]])
                    worksheet.update(f"F{row_idx}", [[new_log]])
                    st.success("🗓 방문 정보가 성공적으로 업데이트되었습니다.")
                except Exception as e:
                    st.error(f"❌ 업데이트 실패: {e}")
    else:
        st.warning("🆕 선택한 차량번호와 입력한 값이 다릅니다. 신규 등록으로 전환됩니다.")
        matched = []  # 신규 등록으로 이동
else:
    matched = []

# ✅ 신규 고객 등록
if not matched:
    st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
    with st.form("register_form"):
        new_plate = st.text_input("🚘 전체 차량번호", key="new_plate")
        new_phone = st.text_input("📞 고객 전화번호", key="new_phone")
        register_submit = st.form_submit_button("📥 신규 고객 등록")

        if register_submit and new_plate and new_phone:
            records = worksheet.get_all_records()
            existing_customer = next((r for r in records if r.get("차량번호") == new_plate), None)
            formatted_phone = format_phone_number(new_phone)

            if existing_customer:
                st.warning("🚨 이미 등록된 고객입니다.")
                confirm_new = st.radio("오늘 추가 방문으로 기록할까요?", ["Y", "N"], key="existing_confirm")
                if st.button("✅ 기존 고객 등록 확인"):
                    if confirm_new == "Y":
                        try:
                            row_idx = next((i + 2 for i, r in enumerate(records) if r["차량번호"] == new_plate), None)
                            prev_count = int(existing_customer.get("총 방문 횟수", 0))
                            new_count = prev_count + 1
                            old_log = existing_customer.get("방문기록", "")
                            new_log = f"{old_log}, {now_str} (1)" if old_log else f"{now_str} (1)"
                            worksheet.update(f"D{row_idx}", [[today]])
                            worksheet.update(f"E{row_idx}", [[new_count]])
                            worksheet.update(f"F{row_idx}", [[new_log]])
                            st.success("✅ 기존 고객 방문 정보가 추가되었습니다.")
                            st.session_state.new_plate = ""
                            st.session_state.new_phone = ""
                        except Exception as e:
                            st.error(f"❌ 업데이트 실패: {e}")
                    else:
                        st.stop()
            else:
                try:
                    new_row = [new_plate, formatted_phone, today, today, 1, f"{now_str} (1)"]
                    worksheet.append_row(new_row)
                    st.success("✅ 신규 고객 등록 완료")
                    st.session_state.new_plate = ""
                    st.session_state.new_phone = ""
                except Exception as e:
                    st.error(f"❌ 등록 실패: {e}")