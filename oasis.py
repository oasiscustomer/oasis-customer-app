# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py - 세차장 고객 관리 시스템 (Streamlit WebApp)
- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
- 한국 시간 (KST) 기준 기록
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime, timedelta
import pytz
import json
import re

# ✅ 인증 처리
@st.cache_resource
def load_credentials():
    try:
        return Credentials.from_service_account_info(
            st.secrets["gcp_service_account"],
            scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
        )
    except Exception as e:
        st.error(f"🔐 인증 실패: {e}")
        return None

credentials = load_credentials()
if credentials is None:
    st.stop()

# ✅ 구글 시트 연동
try:
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").sheet1
except Exception as e:
    st.error(f"🚨 Google Sheets 연결 오류: {e}")
    st.stop()

# ✅ 현재 한국 시간
def get_kst_now():
    kst = pytz.timezone("Asia/Seoul")
    return datetime.now(kst)

st.title("🚗 세차장 고객 관리 시스템")
st.markdown("""
- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
""")

# ✅ 세션 상태 초기화
if "matched" not in st.session_state:
    st.session_state.matched = []
if "selected_customer" not in st.session_state:
    st.session_state.selected_customer = None
if "confirm_insert" not in st.session_state:
    st.session_state.confirm_insert = None
if "insert_triggered" not in st.session_state:
    st.session_state.insert_triggered = False

# ✅ 차량번호 입력
st.subheader("2️⃣ 고객 차량 정보 입력")
plate_input = st.text_input("🔍 차량 번호 (전체 또는 끝 4자리)")
search = st.button("🔎 확인")

if search and plate_input:
    records = worksheet.get_all_records()
    matched = [r for r in records if isinstance(r, dict) and (plate_input in str(r.get("차량번호", "")) or str(r.get("차량번호", "")).endswith(plate_input))]
    st.session_state.matched = matched
    st.session_state.selected_customer = None
    st.session_state.confirm_insert = None
    st.session_state.insert_triggered = False

if st.session_state.matched:
    matched = st.session_state.matched

    if len(matched) == 1:
        st.session_state.selected_customer = matched[0]
    else:
        st.warning("🚗 여러 고객이 있습니다. 선택하세요")
        options = [r["차량번호"] for r in matched if "차량번호" in r]
        selected_plate = st.selectbox("차량번호 선택", options)
        st.session_state.selected_customer = next((r for r in matched if r["차량번호"] == selected_plate), None)

    customer = st.session_state.selected_customer
    if customer:
        now = get_kst_now()
        today = now.strftime("%Y-%m-%d")
        last_visit = customer.get("마지막 방문날짜", "")

        if last_visit == today:
            st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
            st.session_state.confirm_insert = st.radio("입력 확인", ["Y", "N"], horizontal=True)
            if st.button("✅ 확인"):
                st.session_state.insert_triggered = True
        else:
            st.session_state.confirm_insert = "Y"
            st.session_state.insert_triggered = True

        if st.session_state.confirm_insert == "Y" and st.session_state.insert_triggered:
            row_idx = worksheet.find(customer["차량번호"]).row
            visit_count = int(customer.get("총 방문 횟수", 0)) + 1
            log = customer.get("방문기록", "")
            new_log = f"{log}, {now.strftime('%Y-%m-%d %H:%M')} (1)" if log else f"{now.strftime('%Y-%m-%d %H:%M')} (1)"
            worksheet.update(f"D{row_idx}", today)
            worksheet.update(f"E{row_idx}", visit_count)
            worksheet.update(f"F{row_idx}", new_log)
            st.success("📅 방문 정보가 성공적으로 입력되었습니다.")

elif search:
    st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
    full_plate = st.text_input("🚘 전체 차량번호 (예: 160호7421)", key="new_plate")
    raw_phone = st.text_input("📞 고객 전화번호", key="new_phone")

    def format_phone(phone):
        digits = re.sub(r'[^0-9]', '', phone)
        return f"{digits[:3]}-{digits[3:7]}-{digits[7:]}" if len(digits) == 11 else phone

    if st.button("📥 신규 고객 등록"):
        if not full_plate or not raw_phone:
            st.warning("🚨 모든 정보를 입력해 주세요.")
        else:
            all_records = worksheet.get_all_records()
            if any(full_plate == str(r.get("차량번호", "")) for r in all_records):
                st.info("📌 이미 등록된 차량번호입니다. 오늘 다시 방문한 경우라면 기존 기록을 사용해 주세요.")
            else:
                now = get_kst_now()
                today = now.strftime("%Y-%m-%d")
                phone = format_phone(raw_phone)
                row = [full_plate, phone, today, today, 1, f"{now.strftime('%Y-%m-%d %H:%M')} (1)"]
                worksheet.append_row(row)
                st.success("✅ 신규 고객 등록 완료")