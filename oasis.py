# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IB86aqF8JjCHaMrFHhoaDmbFxtJ5DkyJ
"""

import os
import pytesseract

# 🚨 Streamlit Cloud에서 Tesseract가 설치되지 않은 경우, 직접 설치
if not os.path.exists("/usr/bin/tesseract"):
    os.system("sudo apt-get update")
    os.system("sudo apt-get install -y tesseract-ocr")

# Tesseract 실행 파일 경로 설정 (Streamlit Cloud 환경에 맞게 지정)
tesseract_path = "/usr/bin/tesseract"
pytesseract.pytesseract.tesseract_cmd = tesseract_path

# Tesseract 실행 가능 여부 확인
if not os.path.exists(tesseract_path):
    raise FileNotFoundError(f"Tesseract 실행 파일을 찾을 수 없습니다: {tesseract_path}")

import sys
import subprocess

# 🚨 필요한 패키지가 없을 경우 자동 설치 (Google Colab 및 로컬 환경 지원)
def install_packages():
    required_packages = ["gspread", "oauth2client", "pytesseract", "opencv-python-headless", "streamlit", "numpy"]
    for package in required_packages:
        try:
            __import__(package)
        except ImportError:
            subprocess.check_call([sys.executable, "-m", "pip", "install", package])

# 🚨 Google Colab 환경에서만 패키지를 설치
if "google.colab" in sys.modules:
    install_packages()

import cv2
import pytesseract
import re
import gspread
import streamlit as st
from google.auth.transport.requests import Request
from google.oauth2 import service_account
from PIL import Image
import tempfile

st.title("🚗 세차장 고객 관리 시스템")
st.write("📸 차량 사진을 업로드하고 고객 정보를 확인하세요.")

# 📤 JSON 키 파일 업로드 (Google Colab & Streamlit Cloud 대응)
st.subheader("1️⃣ Google Sheets API 키 파일 업로드")
json_key_path = None  # 초기화

if "google.colab" in sys.modules:
    # Google Colab에서 JSON 파일 업로드
    from google.colab import files
    uploaded_key = files.upload()
    json_key_path = list(uploaded_key.keys())[0]
else:
    # Streamlit Cloud에서는 웹에서 JSON 업로드
    uploaded_key = st.file_uploader("🔑 Google Cloud에서 다운로드한 JSON 키 파일을 업로드하세요.", type=["json"])
    if uploaded_key is not None:
        with tempfile.NamedTemporaryFile(delete=False, suffix=".json") as temp_key_file:
            temp_key_file.write(uploaded_key.getbuffer())
            json_key_path = temp_key_file.name

# Google Sheets API 인증 설정
if json_key_path is not None:
    credentials = service_account.Credentials.from_service_account_file(
        json_key_path, scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
    )
    client = gspread.authorize(credentials)
    spreadsheet = client.open("Oasis Customer Management")
    worksheet = spreadsheet.worksheet("시트1")
    st.success("✅ Google Sheets 연결 성공!")

    # 📤 차량 사진 업로드
    st.subheader("2️⃣ 차량 사진 업로드")
    uploaded_image = st.file_uploader("📸 차량 사진을 업로드하세요.", type=["jpg", "jpeg", "png"])

    if uploaded_image is not None:
        image = Image.open(uploaded_image)
        st.image(image, caption="업로드된 이미지", use_column_width=True)

        # 이미지 저장 후 OCR 실행
        with tempfile.NamedTemporaryFile(delete=False, suffix=".jpg") as temp_image:
            temp_image.write(uploaded_image.getbuffer())
            temp_image_path = temp_image.name

        # OCR 실행
        def recognize_license_plate(image_path):
            img = cv2.imread(image_path)
            gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
            plate_text = pytesseract.image_to_string(gray, lang='eng')
            plate_number_match = re.findall(r'\d{2,3}[가-힣]\s?\d{4}', plate_text)
            return plate_number_match[0] if plate_number_match else "번호판 인식 실패"

        plate_number = recognize_license_plate(temp_image_path)

        # OCR 실패 시 직접 입력
        if plate_number == "번호판 인식 실패":
            plate_number = st.text_input("🚨 번호판 인식 실패! 차량 번호를 직접 입력하세요:")

        st.write(f"🚗 최종 차량 번호: {plate_number}")

        # 고객 정보 확인 및 업데이트
        records = worksheet.get_all_records()
        customer_exists = any(record["Vehicle number"] == plate_number for record in records)

        if customer_exists:
            st.success("✅ 기존 고객입니다. 방문 기록을 업데이트합니다.")
        else:
            phone_number = st.text_input("📞 신규 고객입니다. 전화번호를 입력하세요:")
            if st.button("🚗 신규 고객 등록") and phone_number:
                new_customer = [plate_number, phone_number, "2025-03-19", "2025-03-19", 1, "2025-03-19 10:25 (1)"]
                worksheet.append_row(new_customer)
                st.success(f"✅ 신규 고객이 등록되었습니다: {plate_number}")