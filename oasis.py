# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py - 세차장 고객 관리 시스템 (Streamlit WebApp)

- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import re
import json

# ✅ Google Sheets API 인증 처리
try:
    credentials = Credentials.from_service_account_info(
        st.secrets["gcp_service_account"],
        scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
    )
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").worksheet("시트1")
except Exception as e:
    st.error(f"🚨 Google Sheets 연결 오류: {e}")
    st.stop()

st.title("🚗 세차장 고객 관리 시스템")
st.caption("차량 번호와 고객 정보를 입력하여 Google Sheets에 기록합니다.")

# ✅ 세션 상태 초기화
if "step" not in st.session_state:
    st.session_state.step = "search"
if "selected_customer" not in st.session_state:
    st.session_state.selected_customer = None
if "today_duplicate" not in st.session_state:
    st.session_state.today_duplicate = False
if "new_customer_plate" not in st.session_state:
    st.session_state.new_customer_plate = ""
if "new_customer_phone" not in st.session_state:
    st.session_state.new_customer_phone = ""

# ✅ 고객 차량 정보 입력
st.subheader("2️⃣ 고객 차량 정보 입력")
plate_input = st.text_input("🔍 차량 번호 (전체 또는 끝 4자리)")
search_button = st.button("🔎 확인")

if search_button and plate_input:
    try:
        records = worksheet.get_all_records()
        matched = [r for r in records if isinstance(r, dict) and (plate_input in str(r.get("차량번호", "")) or str(r.get("차량번호", "")).endswith(plate_input))]
    except Exception as e:
        st.error(f"🚨 시트 조회 오류: {e}")
        st.stop()

    if len(matched) == 1:
        customer = matched[0]
        st.session_state.selected_customer = customer
        now = datetime.now()
        date_str = now.strftime("%Y-%m-%d")
        full_time = now.strftime("%Y-%m-%d %H:%M")

        if date_str in customer.get("방문기록", ""):
            st.session_state.today_duplicate = True
            st.success("✅ 기존 고객 확인됨. 방문 기록을 자동으로 업데이트합니다.")
        else:
            # 바로 업데이트
            row_index = records.index(customer) + 2
            visit_log = customer.get("방문기록", "")
            updated_log = visit_log + f", {full_time} (1)" if visit_log else f"{full_time} (1)"
            worksheet.update(f"D{row_index}", date_str)
            worksheet.update(f"E{row_index}", int(customer.get("총 방문 횟수", 0)) + 1)
            worksheet.update(f"F{row_index}", updated_log)
            st.success("📅 방문 정보가 성공적으로 업데이트되었습니다.")

    elif len(matched) > 1:
        st.warning("⚠️ 동일한 번호가 여러 건 존재합니다. 전체 차량번호로 검색해 주세요.")
    else:
        st.session_state.step = "register"
        st.session_state.new_customer_plate = plate_input

# ✅ 중복 방문 고객 확인 입력
if st.session_state.today_duplicate and st.session_state.selected_customer:
    st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
    confirm = st.radio("입력 확인", ["Y", "N"])
    if st.button("✅ 확인"):
        if confirm == "Y":
            try:
                now = datetime.now()
                date_str = now.strftime("%Y-%m-%d")
                full_time = now.strftime("%Y-%m-%d %H:%M")
                customer = st.session_state.selected_customer
                records = worksheet.get_all_records()
                row_index = records.index(customer) + 2
                visit_log = customer.get("방문기록", "")
                updated_log = visit_log + f", {full_time} (1)"
                worksheet.update(f"D{row_index}", date_str)
                worksheet.update(f"E{row_index}", int(customer.get("총 방문 횟수", 0)) + 1)
                worksheet.update(f"F{row_index}", updated_log)
                st.success("📅 방문 정보가 성공적으로 추가 입력되었습니다.")
            except Exception as e:
                st.error(f"🚨 추가 입력 실패: {e}")
        else:
            st.warning("❌ 추가 입력이 취소되었습니다.")
        st.session_state.today_duplicate = False

# ✅ 신규 고객 등록
if st.session_state.step == "register":
    st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
    full_plate = st.text_input("🚘 전체 차량번호 (예: 160호 7421)", value=st.session_state.new_customer_plate)
    raw_phone = st.text_input("📞 고객 전화번호 (예: 01042921289 또는 010-4292-1289)")

    def format_phone(phone):
        digits = re.sub(r'[^0-9]', '', phone)
        if len(digits) == 11:
            return f"{digits[:3]}-{digits[3:7]}-{digits[7:]}"
        return phone

    if st.button("📥 신규 고객 등록"):
        try:
            records = worksheet.get_all_records()
            duplicate_plate = any(full_plate == str(r.get("차량번호", "")) for r in records)
            if duplicate_plate:
                st.warning("⚠️ 이미 등록된 차량번호입니다. 다시 확인해 주세요.")
            else:
                now = datetime.now()
                full_time = now.strftime("%Y-%m-%d %H:%M")
                date_str = now.strftime("%Y-%m-%d")
                formatted_phone = format_phone(raw_phone)
                new_row = [full_plate, formatted_phone, date_str, date_str, 1, f"{full_time} (1)"]
                worksheet.append_row(new_row)
                st.success("✅ 신규 고객 등록 완료!")
                st.session_state.step = "search"
        except Exception as e:
            st.error(f"🚨 신규 등록 오류: {e}")