# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py - 세차장 고객 관리 시스템 (Streamlit WebApp)
- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
- KST(한국 표준시) 기준 기록
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import pytz
import re
import json

# ✅ 현재 KST 시간 가져오기
def get_kst_now():
    return datetime.now(pytz.timezone("Asia/Seoul"))

# ✅ Google 인증 처리
def load_credentials():
    try:
        return Credentials.from_service_account_info(
            st.secrets["gcp_service_account"],
            scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
        )
    except Exception as e:
        st.error(f"🔐 인증 실패: {e}")
        st.stop()

credentials = load_credentials()

# ✅ Google Sheets 연동
try:
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").sheet1
except Exception as e:
    st.error(f"🚨 Google Sheets 연결 실패: {e}")
    st.stop()

# ✅ UI 시작
st.title("🚗 세차장 고객 관리 시스템")

# ✅ 세션 상태 초기화
if "matched" not in st.session_state:
    st.session_state.matched = []
if "selected_customer" not in st.session_state:
    st.session_state.selected_customer = None
if "allow_insert" not in st.session_state:
    st.session_state.allow_insert = False
if "insert_triggered" not in st.session_state:
    st.session_state.insert_triggered = False

# ✅ 고객 차량 번호 입력
st.subheader("2️⃣ 고객 차량 정보 입력")
plate_input = st.text_input("🔎 차량 번호 (전체 또는 끝 4자리)")
if st.button("🔍 확인") and plate_input:
    records = worksheet.get_all_records()
    matched = []
    for r in records:
        if isinstance(r, dict):
            plate = str(r.get("차량번호", ""))
            if plate_input in plate or plate.endswith(plate_input):
                matched.append(r)
    st.session_state.matched = matched
    st.session_state.selected_customer = None
    st.session_state.allow_insert = False
    st.session_state.insert_triggered = False

# ✅ 기존 고객 처리
if st.session_state.matched:
    if len(st.session_state.matched) == 1:
        st.session_state.selected_customer = st.session_state.matched[0]
    else:
        options = [r.get("차량번호") for r in st.session_state.matched if r.get("차량번호")]
        selected_plate = st.selectbox("🚘 여러 고객이 있습니다. 선택하세요", options)
        selected_customer = next((r for r in st.session_state.matched if r.get("차량번호") == selected_plate), None)
        if selected_customer:
            st.session_state.selected_customer = selected_customer

    customer = st.session_state.selected_customer
    if customer:
        now = get_kst_now()
        today = now.strftime("%Y-%m-%d")
        time_now = now.strftime("%Y-%m-%d %H:%M")
        log = customer.get("방문기록", "")

        if today in log:
            st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
            confirm = st.radio("입력 확인", ["Y", "N"])
            if confirm == "Y" and st.button("✅ 추가 입력"):
                st.session_state.allow_insert = True
        else:
            if st.button("✅ 오늘 첫 방문 입력"):
                st.session_state.allow_insert = True

        if st.session_state.allow_insert:
            all_records = worksheet.get_all_records()
            row_idx = next((i + 2 for i, r in enumerate(all_records) if r.get("차량번호") == customer.get("차량번호")), None)
            if row_idx:
                worksheet.update(f"D{row_idx}", [[today]])
                worksheet.update(f"E{row_idx}", [[int(customer.get("총 방문 횟수", 0)) + 1]])
                new_log = log + f", {time_now} (1)" if log else f"{time_now} (1)"
                worksheet.update(f"F{row_idx}", [[new_log]])
                st.success("✅ 방문 정보가 기록되었습니다.")

# ✅ 신규 고객 처리
elif plate_input:
    st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
    full_plate = st.text_input("🚘 전체 차량번호", key="new_plate")
    raw_phone = st.text_input("📞 고객 전화번호", key="new_phone")
    confirm = st.radio("등록하시겠습니까?", ["Y", "N"])

    def format_phone(phone):
        digits = re.sub(r'[^0-9]', '', phone)
        return f"{digits[:3]}-{digits[3:7]}-{digits[7:]}" if len(digits) == 11 else phone

    if st.button("📥 신규 고객 등록"):
        if confirm == "Y" and full_plate and raw_phone:
            all_records = worksheet.get_all_records()
            if any(r.get("차량번호") == full_plate for r in all_records):
                st.warning("⚠️ 이미 등록된 차량번호입니다.")
            else:
                now = get_kst_now()
                today = now.strftime("%Y-%m-%d")
                time_now = now.strftime("%Y-%m-%d %H:%M")
                phone = format_phone(raw_phone)
                new_row = [full_plate, phone, today, today, 1, f"{time_now} (1)"]
                worksheet.append_row(new_row)
                st.success(f"🎉 신규 고객 등록 완료: {full_plate}")