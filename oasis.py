# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py - 최종 안정화 버전 (Streamlit WebApp)
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import pytz
import re
import json

# ✅ 인증 처리
try:
    credentials = Credentials.from_service_account_info(
        st.secrets["gcp_service_account"],
        scopes=["https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/drive"]
    )
except Exception as e:
    st.error(f"🚨 인증 오류: {e}")
    st.stop()

# ✅ Google Sheets 연결
try:
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").worksheet("시트1")
except Exception as e:
    st.error(f"🚨 Google Sheets 연결 오류: {e}")
    st.stop()

# ✅ 한국 표준시 기준 시간
kst = pytz.timezone("Asia/Seoul")
now = datetime.now(kst)
today = now.strftime("%Y-%m-%d")
timestamp = now.strftime("%Y-%m-%d %H:%M")

# ✅ 앱 제목
st.markdown("""
<h2 style='text-align:center;'>🚗 세차장 고객 관리 시스템</h2>
<p style='text-align:center;'>차량 번호와 고객 정보를 입력하여 Google Sheets에 기록합니다.</p>
""", unsafe_allow_html=True)

# ✅ 세션 상태 초기화
if "selected_car" not in st.session_state:
    st.session_state.selected_car = None
if "confirmation_required" not in st.session_state:
    st.session_state.confirmation_required = False
if "confirm_choice" not in st.session_state:
    st.session_state.confirm_choice = None

# ✅ 차량 정보 입력
st.subheader("2️⃣ 고객 차량 정보 입력")
plate_input = st.text_input("🔍 차량 번호 (전체 또는 끝 4자리)")
search_button = st.button("🔎 확인")

if search_button and plate_input:
    try:
        records = worksheet.get_all_records()
    except Exception as e:
        st.error(f"🚨 시트 불러오기 오류: {e}")
        st.stop()

    matched = [r for r in records if isinstance(r, dict) and (plate_input in r.get("차량번호", "") or r.get("차량번호", "").endswith(plate_input))]

    if len(matched) == 0:
        st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
        full_plate = st.text_input("🚘 전체 차량번호 입력")
        raw_phone = st.text_input("📞 고객 전화번호 입력")

        def format_phone(phone):
            digits = re.sub(r'[^0-9]', '', phone)
            if len(digits) == 11:
                return f"{digits[:3]}-{digits[3:7]}-{digits[7:]}"
            return phone

        if st.button("📥 신규 고객 등록"):
            existing = [r for r in records if r.get("차량번호") == full_plate]
            if existing:
                st.warning("🚨 이미 등록된 차량입니다.")
            else:
                phone = format_phone(raw_phone)
                new_row = [full_plate, phone, today, today, 1, f"{timestamp} (1)"]
                worksheet.append_row(new_row)
                st.success("✅ 신규 고객 등록 완료!")

    elif len(matched) == 1:
        customer = matched[0]
        row_idx = records.index(customer) + 2

        if customer.get("마지막 방문날짜") == today:
            st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
            choice = st.radio("입력 확인", ["Y", "N"], key="confirm_repeat")
            if st.button("✅ 확인"):
                if choice == "Y":
                    new_log = customer.get("방문기록", "") + f", {timestamp} (1)"
                    worksheet.update(f"D{row_idx}", today)
                    worksheet.update(f"E{row_idx}", int(customer.get("총 방문 횟수", 0)) + 1)
                    worksheet.update(f"F{row_idx}", new_log)
                    st.success("📅 방문 정보가 성공적으로 추가되었습니다.")
                else:
                    st.warning("⛔ 입력이 취소되었습니다.")

        else:
            new_log = customer.get("방문기록", "") + f", {timestamp} (1)"
            worksheet.update(f"D{row_idx}", today)
            worksheet.update(f"E{row_idx}", int(customer.get("총 방문 횟수", 0)) + 1)
            worksheet.update(f"F{row_idx}", new_log)
            st.success("📅 방문 정보가 성공적으로 기록되었습니다.")

    else:
        st.warning("🚘 여러 고객이 있습니다. 선택하세요")
        options = [r.get("차량번호") for r in matched if "차량번호" in r]
        selected = st.selectbox("차량번호 선택", options)
        if selected:
            selected_customer = next((r for r in matched if r.get("차량번호") == selected), None)
            st.session_state.selected_car = selected_customer

    # ✅ 선택된 차량에 대한 처리
    if st.session_state.selected_car:
        customer = st.session_state.selected_car
        row_idx = records.index(customer) + 2

        if customer.get("마지막 방문날짜") == today:
            st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
            choice = st.radio("입력 확인", ["Y", "N"], key="multi_confirm")
            if st.button("✅ 확인", key="multi_button"):
                if choice == "Y":
                    new_log = customer.get("방문기록", "") + f", {timestamp} (1)"
                    worksheet.update(f"D{row_idx}", today)
                    worksheet.update(f"E{row_idx}", int(customer.get("총 방문 횟수", 0)) + 1)
                    worksheet.update(f"F{row_idx}", new_log)
                    st.success("📅 방문 정보가 성공적으로 추가되었습니다.")
                else:
                    st.warning("⛔ 입력이 취소되었습니다.")
        else:
            new_log = customer.get("방문기록", "") + f", {timestamp} (1)"
            worksheet.update(f"D{row_idx}", today)
            worksheet.update(f"E{row_idx}", int(customer.get("총 방문 횟수", 0)) + 1)
            worksheet.update(f"F{row_idx}", new_log)
            st.success("📅 방문 정보가 성공적으로 기록되었습니다.")