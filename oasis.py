# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py

Streamlit 고객 관리 시스템 (Google Sheets 연동, 중복 확인, 하루 재입력 방지)
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import re
import json

# ✅ 인증 처리 함수
def load_credentials():
    try:
        return Credentials.from_service_account_info(
            st.secrets["gcp_service_account"],
            scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
        )
    except Exception:
        st.subheader("🔑 Google Sheets API 키 업로드 (Colab 전용)")
        uploaded_key = st.file_uploader("JSON 키 파일 업로드", type=["json"])
        if uploaded_key is not None:
            try:
                info = json.load(uploaded_key)
                return Credentials.from_service_account_info(
                    info,
                    scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
                )
            except Exception as e:
                st.error(f"🚨 키 파일 오류: {e}")
                st.stop()
        else:
            st.warning("⛔ 키 파일을 업로드해야 앱이 작동합니다.")
            st.stop()
    return None

credentials = load_credentials()
if credentials is None:
    st.error("🚫 인증 실패: credentials 값이 None입니다.")
    st.stop()

# ✅ Google Sheets 연동
try:
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").worksheet("시트1")
except Exception as e:
    st.error(f"🚨 Google Sheets 연결 오류: {e}")
    st.stop()

# ✅ 세션 상태 초기화
if "stage" not in st.session_state:
    st.session_state.stage = "input_plate"
if "selected_customer" not in st.session_state:
    st.session_state.selected_customer = None
if "matched" not in st.session_state:
    st.session_state.matched = []

# ✅ 타이틀 및 안내
st.title("🚗 세차장 고객 관리 시스템")
st.markdown("""
* `oasis.py - 세차장 고객 관리 시스템 (Streamlit WebApp)`
  - Google Sheets 연동
  - 고객 차량 번호 입력 시 중복 확인
  - 하루 중복 방문 시 사용자 재확인
""")

# ✅ 차량번호 입력 단계
if st.session_state.stage == "input_plate":
    st.subheader("2️⃣ 고객 차량 정보 입력")
    plate_input = st.text_input("🔍 차량 번호 (전체 또는 끝 4자리)")
    if st.button("🔍 확인") and plate_input:
        records = worksheet.get_all_records()
        matched = [r for r in records if isinstance(r, dict) and plate_input in r.get("차량번호", "") or r.get("차량번호", "").endswith(plate_input)]
        st.session_state.matched = matched

        if len(matched) == 1:
            customer = matched[0]
            st.session_state.selected_customer = customer
            now = datetime.now()
            date_str = now.strftime("%Y-%m-%d")
            if date_str in customer.get("방문기록", ""):
                st.session_state.stage = "confirm_duplicate"
            else:
                st.session_state.stage = "confirm_insert"

        elif len(matched) > 1:
            options = [r["차량번호"] for r in matched]
            selected_plate = st.selectbox("🚗 차량번호를 선택하세요", options)
            if st.button("선택 확인"):
                selected = next((r for r in matched if r["차량번호"] == selected_plate), None)
                if selected:
                    st.session_state.selected_customer = selected
                    now = datetime.now()
                    date_str = now.strftime("%Y-%m-%d")
                    if date_str in selected.get("방문기록", ""):
                        st.session_state.stage = "confirm_duplicate"
                    else:
                        st.session_state.stage = "confirm_insert"
        else:
            st.session_state.stage = "new_customer"

# ✅ 신규 등록 단계
if st.session_state.stage == "new_customer":
    st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
    new_plate = st.text_input("🚘 전체 차량번호 (예: 160호 7421)", key="new_plate")
    raw_phone = st.text_input("📞 고객 전화번호 (예: 01042921289 또는 010-4292-1289)", key="new_phone")

    def format_phone(phone):
        digits = re.sub(r'[^0-9]', '', phone)
        if len(digits) == 11:
            return f"{digits[:3]}-{digits[3:7]}-{digits[7:]}"
        return phone

    if st.button("📥 신규 고객 등록") and new_plate and raw_phone:
        all_records = worksheet.get_all_records()
        exists = any(r.get("차량번호") == new_plate for r in all_records)
        if exists:
            st.warning("🚫 이미 등록된 차량번호입니다.")
        else:
            phone = format_phone(raw_phone)
            now = datetime.now().strftime("%Y-%m-%d %H:%M")
            date_only = now.split()[0]
            new_row = [new_plate, phone, date_only, date_only, 1, f"{now} (1)"]
            worksheet.append_row(new_row)
            st.success(f"✅ 신규 고객 등록 완료: {new_plate}")
            st.session_state.stage = "input_plate"

# ✅ 중복 확인 단계
if st.session_state.stage == "confirm_duplicate":
    st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
    choice = st.radio("입력 확인", ["Y", "N"], key="confirm_dup")
    if st.button("확인"):
        if choice == "Y":
            st.session_state.stage = "confirm_insert"
        else:
            st.success("⏹ 입력이 취소되었습니다.")
            st.session_state.stage = "input_plate"

# ✅ 방문 기록 업데이트 단계
if st.session_state.stage == "confirm_insert":
    customer = st.session_state.selected_customer
    records = worksheet.get_all_records()
    row_index = next((i + 2 for i, r in enumerate(records) if r.get("차량번호") == customer.get("차량번호")), None)
    if row_index:
        now = datetime.now().strftime("%Y-%m-%d %H:%M")
        date_only = now.split()[0]
        old_log = customer.get("방문기록", "")
        new_log = old_log + f", {now} (1)" if old_log else f"{now} (1)"

        worksheet.update_cell(row_index, 4, date_only)
        worksheet.update_cell(row_index, 5, int(customer.get("총 방문 횟수", 0)) + 1)
        worksheet.update_cell(row_index, 6, new_log)
        st.success("🗓 방문 정보가 성공적으로 업데이트되었습니다.")

    st.session_state.stage = "input_plate"