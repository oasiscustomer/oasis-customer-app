# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py - 세차장 고객 관리 시스템 (Streamlit WebApp)
- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import re
import json

# ✅ 인증: Streamlit Cloud 환경에서 secrets.toml 사용
@st.cache_resource(show_spinner=False)
def get_worksheet():
    try:
        credentials = Credentials.from_service_account_info(
            st.secrets["gcp_service_account"],
            scopes=[
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/drive"
            ]
        )
        client = gspread.authorize(credentials)
        return client.open("Oasis Customer Management").worksheet("시트1")
    except Exception as e:
        st.error(f"🚨 Google Sheets 연결 오류: {e}")
        st.stop()

worksheet = get_worksheet()
st.title("🚗 세차장 고객 관리 시스템")
st.write("📋 차량 번호와 고객 정보를 입력하여 Google Sheets에 기록합니다.")

# ✅ 세션 상태 초기화
for key in ["step", "selected_customer", "prompt_duplicate"]:
    if key not in st.session_state:
        st.session_state[key] = None

st.subheader("2️⃣ 고객 차량 정보 입력")
plate_input = st.text_input("🔍 차량 번호 (전체 또는 끝 4자리)")
search_button = st.button("🔍 확인")

if search_button and plate_input:
    records = worksheet.get_all_records()
    matched = [r for r in records if plate_input in str(r.get('차량번호', '')) or str(r.get('차량번호', '')).endswith(plate_input)]

    if len(matched) == 0:
        # 신규 고객 등록
        st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
        full_plate = st.text_input("🚘 전체 차량번호 (예: 160호 7421)", key="new_plate")
        raw_phone = st.text_input("📞 고객 전화번호 (예: 01042921289 또는 010-4292-1289)", key="new_phone")

        def format_phone(phone):
            digits = re.sub(r'[^0-9]', '', phone)
            if len(digits) == 11:
                return f"{digits[:3]}-{digits[3:7]}-{digits[7:]}"
            return phone

        # 중복 검사 (전체번호 기준)
        if full_plate:
            exists = any(str(r.get("차량번호", "")) == full_plate for r in records)
            if exists:
                st.error("🚫 이미 등록된 차량번호입니다. 다시 확인해 주세요.")
            elif st.button("📥 신규 고객 등록") and raw_phone:
                phone = format_phone(raw_phone)
                now = datetime.now().strftime("%Y-%m-%d %H:%M")
                date_only = now.split()[0]
                new_row = [full_plate, phone, date_only, date_only, 1, f"{now} (1)"]
                worksheet.append_row(new_row)
                st.success(f"✅ 신규 고객 등록 완료: {full_plate}")

    elif len(matched) == 1:
        # 기존 고객 처리
        customer = matched[0]
        st.session_state.selected_customer = customer
        row_index = records.index(customer) + 2
        now = datetime.now()
        now_str = now.strftime("%Y-%m-%d %H:%M")
        today = now.strftime("%Y-%m-%d")

        visit_log = customer.get("방문기록", "")
        if today in visit_log:
            st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
            choice = st.radio("입력 확인", ["Y", "N"], key="confirm_duplicate")
            confirm_button = st.button("✅ 확인")
            if confirm_button:
                if choice == "Y":
                    new_log = visit_log + f", {now_str} (1)"
                    worksheet.update_cell(row_index, 4, today)
                    worksheet.update_cell(row_index, 5, int(customer.get("총 방문 횟수", 0)) + 1)
                    worksheet.update_cell(row_index, 6, new_log)
                    st.success("📅 방문 정보가 성공적으로 추가 입력되었습니다.")
                else:
                    st.warning("❌ 입력이 취소되었습니다.")
        else:
            new_log = visit_log + f", {now_str} (1)" if visit_log else f"{now_str} (1)"
            worksheet.update_cell(row_index, 4, today)
            worksheet.update_cell(row_index, 5, int(customer.get("총 방문 횟수", 0)) + 1)
            worksheet.update_cell(row_index, 6, new_log)
            st.success("📅 방문 정보가 성공적으로 입력되었습니다.")

    elif len(matched) > 1:
        st.warning("🚨 동일한 차량번호 끝 4자리가 여러 개입니다. 전체 번호를 선택하세요.")
        options = [r['차량번호'] for r in matched if '차량번호' in r]
        selected = st.selectbox("🔽 전체 차량번호 선택", options)
        if selected:
            st.experimental_rerun()