# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py
Streamlit WebApp용 완성본 (중복 확인 및 Google Sheets API 오류 대응 포함)
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import re
import json

# ✅ 인증
try:
    credentials = Credentials.from_service_account_info(
        st.secrets["gcp_service_account"],
        scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
    )
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").worksheet("시트1")
except Exception as e:
    st.error(f"🚨 Google Sheets 연결 오류: {e}")
    st.stop()

st.title("🚗 세차장 고객 관리 시스템")
st.markdown("""
- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
""")

# ✅ 세션 상태 초기화
if "search_result" not in st.session_state:
    st.session_state.search_result = []
if "selected_customer" not in st.session_state:
    st.session_state.selected_customer = None
if "awaiting_confirmation" not in st.session_state:
    st.session_state.awaiting_confirmation = False

# ✅ 차량 번호 입력
st.subheader("2️⃣ 고객 차량 정보 입력")
plate_input = st.text_input("🔍 차량 번호 (전체 또는 끝 4자리)")
search_btn = st.button("🔎 확인")

# ✅ 차량 검색 처리
if search_btn and plate_input:
    try:
        records = worksheet.get_all_records()
    except Exception as e:
        st.error(f"🚨 데이터 불러오기 실패: {e}")
        st.stop()

    # 조건에 맞는 고객 필터링 (dict인지 확인)
    matched = [r for r in records if isinstance(r, dict) and "차량번호" in r and (
        plate_input in r["차량번호"] or r["차량번호"].endswith(plate_input)
    )]

    if len(matched) == 0:
        st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
        new_plate = st.text_input("🚘 전체 차량번호 (예: 160호 7421)", key="new_plate")
        raw_phone = st.text_input("📞 고객 전화번호 (예: 01042921289 또는 010-4292-1289)", key="new_phone")

        def format_phone(phone):
            digits = re.sub(r"[^0-9]", "", phone)
            if len(digits) == 11:
                return f"{digits[:3]}-{digits[3:7]}-{digits[7:]}"
            return phone

        # ✅ 중복 확인
        if new_plate:
            exists = any(r["차량번호"] == new_plate for r in records if isinstance(r, dict) and "차량번호" in r)
            if exists:
                st.warning("🚨 동일한 차량번호가 이미 등록되어 있습니다. 다시 확인해 주세요.")
            elif st.button("📥 신규 고객 등록") and new_plate and raw_phone:
                phone = format_phone(raw_phone)
                now = datetime.now().strftime("%Y-%m-%d %H:%M")
                date_only = now.split()[0]
                new_row = [new_plate, phone, date_only, date_only, 1, f"{now} (1)"]
                try:
                    worksheet.append_row(new_row)
                    st.success("✅ 신규 고객 등록 완료")
                except Exception as e:
                    st.error(f"🚨 등록 실패: {e}")
    elif len(matched) == 1:
        customer = matched[0]
        st.session_state.selected_customer = customer
        st.session_state.awaiting_confirmation = False

        now_date = datetime.now().strftime("%Y-%m-%d")
        last_visit_date = customer.get("마지막 방문날짜", "")

        if now_date == last_visit_date:
            st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
            confirm = st.radio("입력 확인", ["Y", "N"], key="confirm_repeat")
            if st.button("✅ 확인"):
                if confirm == "Y":
                    st.session_state.awaiting_confirmation = False
                else:
                    st.warning("❌ 입력이 취소되었습니다.")
                    st.stop()
        else:
            st.session_state.awaiting_confirmation = True

    elif len(matched) > 1:
        options = [r["차량번호"] for r in matched]
        selected = st.selectbox("🚘 여러 차량이 일치합니다. 전체 번호를 선택하세요.", options)
        if selected:
            customer = next(r for r in matched if r["차량번호"] == selected)
            st.session_state.selected_customer = customer
            st.session_state.awaiting_confirmation = True

# ✅ 방문 기록 처리
if st.session_state.selected_customer and st.session_state.awaiting_confirmation:
    customer = st.session_state.selected_customer
    all_records = worksheet.get_all_records()
    row_index = next((i + 2 for i, r in enumerate(all_records) if r["차량번호"] == customer["차량번호"]), None)

    if row_index:
        now = datetime.now().strftime("%Y-%m-%d %H:%M")
        date_only = now.split()[0]
        old_log = customer.get("방문기록", "")
        new_log = old_log + f", {now} (1)" if old_log else f"{now} (1)"

        try:
            worksheet.update(f"D{row_index}", [[date_only]])
            worksheet.update(f"E{row_index}", [[int(customer.get("총 방문 횟수", 0)) + 1]])
            worksheet.update(f"F{row_index}", [[new_log]])
            st.success("🗓 방문 정보가 성공적으로 업데이트되었습니다.")
            st.session_state.awaiting_confirmation = False
            st.session_state.selected_customer = None
        except Exception as e:
            st.error(f"🚨 Google Sheets 업데이트 실패: {e}")