# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py

Streamlit Cloud + Google Colab 호환 고객관리 시스템
(방문 중복 입력 방지 및 신규/기존 고객 확인)
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import re
import json

# ✅ 인증 처리 함수
def load_credentials():
    try:
        return Credentials.from_service_account_info(
            st.secrets["gcp_service_account"],
            scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
        )
    except Exception:
        st.subheader("🔑 Google Sheets API 키 업로드 (Colab 전용)")
        uploaded_key = st.file_uploader("JSON 키 파일 업로드", type=["json"])
        if uploaded_key is not None:
            try:
                info = json.load(uploaded_key)
                return Credentials.from_service_account_info(
                    info,
                    scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
                )
            except Exception as e:
                st.error(f"🚨 키 파일 오류: {e}")
                st.stop()
        else:
            st.warning("⛔ 키 파일을 업로드해야 앱이 작동합니다.")
            st.stop()
    return None

credentials = load_credentials()
if credentials is None:
    st.error("🚫 인증 실패: credentials 값이 None입니다.")
    st.stop()

# ✅ Google Sheets 연동
try:
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").worksheet("시트1")
except Exception as e:
    st.error(f"🚨 Google Sheets 연결 실패: {e}")
    st.stop()

st.title("🚗 세차장 고객 관리 시스템")
st.markdown("""
- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
""")

# ✅ 세션 상태 초기화
for key in ["matched", "selected_customer", "input_checked", "is_duplicate", "new_plate", "new_phone"]:
    if key not in st.session_state:
        st.session_state[key] = None

# ✅ 고객 차량 정보 입력
st.subheader("2️⃣ 고객 차량 정보 입력")
plate_input = st.text_input("🔍 차량 번호 (전체 또는 끝 4자리)")
search_btn = st.button("🔎 확인")

if search_btn and plate_input:
    records = worksheet.get_all_records()
    matched = [
        r for r in records
        if isinstance(r, dict) and (
            plate_input in r.get("차량번호", "") or
            r.get("차량번호", "").endswith(plate_input)
        )
    ]
    st.session_state.matched = matched
    st.session_state.input_checked = None  # 초기화

if st.session_state.matched:
    matched = st.session_state.matched

    if len(matched) > 1:
        options = [r["차량번호"] for r in matched]
        selected = st.selectbox("🚘 동일 끝번호 차량이 여러 대입니다. 선택해주세요.", options)
        customer = next((r for r in matched if r["차량번호"] == selected), None)
    else:
        customer = matched[0]

    if customer:
        st.session_state.selected_customer = customer
        st.success("✅ 기존 고객 확인됨. 방문 기록을 자동으로 업데이트합니다.")

        now = datetime.now().strftime("%Y-%m-%d %H:%M")
        date_only = now.split()[0]
        already_today = date_only in customer.get("방문기록", "")

        if already_today and st.session_state.input_checked is None:
            st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
            choice = st.radio("입력 확인", ["Y", "N"], key="dup_confirm")
            if st.button("✅ 확인"):
                st.session_state.input_checked = choice

        if not already_today or st.session_state.input_checked == "Y":
            all_records = worksheet.get_all_records()
            row_index = next((i + 2 for i, r in enumerate(all_records) if r['차량번호'] == customer['차량번호']), None)
            if row_index:
                new_log = customer.get("방문기록", "")
                new_log += f", {now} (1)" if new_log else f"{now} (1)"
                worksheet.update_cell(row_index, 4, date_only)
                worksheet.update_cell(row_index, 5, int(customer.get("총 방문 횟수", 0)) + 1)
                worksheet.update_cell(row_index, 6, new_log)
                st.success("🗓 방문 정보가 성공적으로 업데이트되었습니다.")

elif search_btn and plate_input and not st.session_state.matched:
    st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")

    full_plate = st.text_input("🚘 전체 차량번호 (예: 160호 7421)", key="new_plate")
    raw_phone = st.text_input("📞 고객 전화번호 (예: 01042921289 또는 010-4292-1289)", key="new_phone")

    def format_phone(phone):
        digits = re.sub(r'[^0-9]', '', phone)
        if len(digits) == 11:
            return f"{digits[:3]}-{digits[3:7]}-{digits[7:]}"
        return phone

    if st.button("📥 신규 고객 등록") and full_plate and raw_phone:
        # 중복 확인
        all_records = worksheet.get_all_records()
        if any(r.get("차량번호") == full_plate for r in all_records):
            st.warning("🚨 이미 등록된 차량번호입니다. 다시 확인해주세요.")
        else:
            now = datetime.now().strftime("%Y-%m-%d %H:%M")
            date_only = now.split()[0]
            formatted_phone = format_phone(raw_phone)
            new_row = [full_plate, formatted_phone, date_only, date_only, 1, f"{now} (1)"]
            worksheet.append_row(new_row)
            st.success(f"✅ 신규 고객 등록 완료: {full_plate}")
            st.session_state.matched = None