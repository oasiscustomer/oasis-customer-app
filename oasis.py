# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IB86aqF8JjCHaMrFHhoaDmbFxtJ5DkyJ
"""

# -*- coding: utf-8 -*-
"""oasis.py

Streamlit Cloud 및 Google Colab에서 실행되는 차량 번호판 인식 시스템
"""

import os
import pytesseract
import shutil
import subprocess
import cv2
import re
import sys
import gspread
import streamlit as st
from google.auth.transport.requests import Request
from google.oauth2 import service_account
from PIL import Image
import tempfile

st.title("🚗 세차장 고객 관리 시스템")
st.write("📸 차량 사진을 업로드하고 고객 정보를 확인하세요.")

# 📤 JSON 키 파일 업로드 (Google Colab & Streamlit Cloud 대응)
st.subheader("1️⃣ Google Sheets API 키 파일 업로드")
json_key_path = None  # 초기화

uploaded_key = st.file_uploader("🔑 Google Cloud에서 다운로드한 JSON 키 파일을 업로드하세요.", type=["json"])
if uploaded_key is not None:
    temp_key_file = tempfile.NamedTemporaryFile(delete=False, suffix=".json")
    temp_key_file.write(uploaded_key.getbuffer())
    temp_key_file.close()  # 파일을 닫아야 올바르게 저장됨
    json_key_path = temp_key_file.name

# 🚨 JSON 키 파일이 업로드되지 않았을 경우 경고 메시지 출력
if not json_key_path:
    st.error("🚨 Google Sheets API JSON 키 파일을 업로드해야 합니다!")
    st.stop()

st.write(f"🔑 사용 중인 JSON 키 파일 경로: {json_key_path}")

# Google Sheets API 인증 설정
try:
    credentials = service_account.Credentials.from_service_account_file(
        json_key_path, scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
    )
    client = gspread.authorize(credentials)
    spreadsheet = client.open("Oasis Customer Management")
    worksheet = spreadsheet.worksheet("시트1")
    st.success("✅ Google Sheets 연결 성공!")
except Exception as e:
    st.error(f"🚨 Google Sheets 인증 오류 발생: {e}")
    st.stop()

# 📤 차량 사진 업로드
st.subheader("2️⃣ 차량 사진 업로드")
uploaded_image = st.file_uploader("📸 차량 사진을 업로드하세요.", type=["jpg", "jpeg", "png"])
if uploaded_image is not None:
    image = Image.open(uploaded_image)
    st.image(image, caption="업로드된 이미지", use_column_width=True)

    with tempfile.NamedTemporaryFile(delete=False, suffix=".jpg") as temp_image:
        temp_image.write(uploaded_image.getbuffer())
        temp_image_path = temp_image.name

    st.write(f"🚗 최종 차량 번호: {temp_image_path}")