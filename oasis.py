# -*- coding: utf-8 -*-
"""oasis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUOTH4v8fMMkpnmogHbSc6nku2ox3wFT
"""

# -*- coding: utf-8 -*-
"""
oasis.py

Streamlit WebApp + Google Sheets 기반 세차장 고객 관리 시스템
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
- 한국 시간 (KST) 적용
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
from pytz import timezone
import re
import json

# ✅ 한국 시간 설정
kst = timezone("Asia/Seoul")

# ✅ 인증 처리 함수
def load_credentials():
    try:
        return Credentials.from_service_account_info(
            st.secrets["gcp_service_account"],
            scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
        )
    except Exception:
        st.subheader("🔑 Google Sheets API 키 업로드 (Colab 전용)")
        uploaded_key = st.file_uploader("JSON 키 파일 업로드", type=["json"])
        if uploaded_key is not None:
            try:
                info = json.load(uploaded_key)
                return Credentials.from_service_account_info(
                    info,
                    scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
                )
            except Exception as e:
                st.error(f"🚨 키 파일 오류: {e}")
                st.stop()
        else:
            st.warning("⛔ 키 파일을 업로드해야 앱이 작동합니다.")
            st.stop()
    return None

credentials = load_credentials()
if credentials is None:
    st.error("🚫 인증 실패: credentials 값이 None입니다.")
    st.stop()

# ✅ Google Sheets 연동
try:
    client = gspread.authorize(credentials)
    worksheet = client.open("Oasis Customer Management").worksheet("시트1")
except Exception as e:
    st.error(f"🚨 Google Sheets 연결 오류: {e}")
    st.stop()

# ✅ 앱 제목
st.markdown("""
### oasis.py - 세차장 고객 관리 시스템 (Streamlit WebApp)
- Google Sheets 연동
- 고객 차량 번호 입력 시 중복 확인
- 하루 중복 방문 시 사용자 재확인
""")

st.title("🚗 세차장 고객 관리 시스템")
st.write("차량 번호와 고객 정보를 입력하여 Google Sheets에 기록합니다.")

# ✅ 세션 상태 초기화
if "search_done" not in st.session_state:
    st.session_state.search_done = False
if "selected_customer" not in st.session_state:
    st.session_state.selected_customer = None
if "pending_update" not in st.session_state:
    st.session_state.pending_update = False
if "is_new_customer" not in st.session_state:
    st.session_state.is_new_customer = False

# ✅ 2️⃣ 고객 차량 정보 입력
st.subheader("2️⃣ 고객 차량 정보 입력")
plate_input = st.text_input("🔍 차량 번호 (전체 또는 끝 4자리)")

if st.button("🔍 확인") and plate_input:
    records = worksheet.get_all_records()
    matched = [r for r in records if isinstance(r, dict) and (plate_input in r.get("차량번호", "") or r.get("차량번호", "").endswith(plate_input))]
    st.session_state.search_done = True

    if len(matched) == 0:
        st.session_state.is_new_customer = True
        st.session_state.selected_customer = None

    elif len(matched) == 1:
        st.session_state.selected_customer = matched[0]
        st.session_state.is_new_customer = False

    else:
        st.warning("🚗 여러 고객이 있습니다. 선택하세요")
        selected_plate = st.selectbox("차량번호 선택", [r["차량번호"] for r in matched])
        st.session_state.selected_customer = next((r for r in matched if r["차량번호"] == selected_plate), None)
        st.session_state.is_new_customer = False

# ✅ 기존 고객 처리
if st.session_state.search_done and st.session_state.selected_customer:
    customer = st.session_state.selected_customer
    all_records = worksheet.get_all_records()
    row_index = next((i + 2 for i, r in enumerate(all_records) if r["차량번호"] == customer["차량번호"]), None)

    now = datetime.now(kst)
    today = now.strftime("%Y-%m-%d")
    time_now = now.strftime("%Y-%m-%d %H:%M")

    last_log = customer.get("방문기록", "")
    if today in last_log:
        st.info("📌 오늘 이미 입력된 기록이 있습니다. 추가로 입력할까요?")
        confirm = st.radio("입력 확인", ["Y", "N"])
        if st.button("✅ 확인"):
            if confirm == "Y":
                try:
                    worksheet.update(f"D{row_index}", [[today]])
                    worksheet.update_cell(row_index, 5, int(customer.get("총 방문 횟수", 0)) + 1)
                    worksheet.update_cell(row_index, 6, last_log + f", {time_now} (1)")
                    st.success("🗓 방문 정보가 성공적으로 추가 입력되었습니다.")
                except Exception as e:
                    st.error(f"❌ 추가 입력 실패: {e}")
            else:
                st.info("🚫 입력이 취소되었습니다.")
    else:
        worksheet.update(f"D{row_index}", [[today]])
        worksheet.update_cell(row_index, 5, int(customer.get("총 방문 횟수", 0)) + 1)
        worksheet.update_cell(row_index, 6, last_log + f", {time_now} (1)" if last_log else f"{time_now} (1)")
        st.success("🗓 방문 정보가 성공적으로 입력되었습니다.")

# ✅ 신규 고객 등록
if st.session_state.search_done and st.session_state.is_new_customer:
    st.info("🆕 등록되지 않은 차량입니다. 아래에 고객 정보를 입력해 주세요.")
    full_plate = st.text_input("🚘 전체 차량번호 (예: 160호7421)", key="new_plate")
    raw_phone = st.text_input("📞 고객 전화번호 (예: 01042921289 또는 010-4292-1289)", key="new_phone")

    def format_phone(phone):
        digits = re.sub(r'[^0-9]', '', phone)
        if len(digits) == 11:
            return f"{digits[:3]}-{digits[3:7]}-{digits[7:]}"
        return phone

    if st.button("📥 신규 고객 등록") and full_plate and raw_phone:
        # 중복 등록 여부 확인
        existing = worksheet.get_all_records()
        if any(r.get("차량번호") == full_plate for r in existing):
            st.warning("⚠️ 동일한 차량번호가 이미 등록되어 있습니다. 오늘도 등록할까요?")
            confirm = st.radio("입력 확인", ["Y", "N"], key="dup_confirm")
            if st.button("✅ 확인", key="dup_button"):
                if confirm == "Y":
                    phone = format_phone(raw_phone)
                    now = datetime.now(kst)
                    today = now.strftime("%Y-%m-%d")
                    time_now = now.strftime("%Y-%m-%d %H:%M")
                    new_row = [full_plate, phone, today, today, 1, f"{time_now} (1)"]
                    worksheet.append_row(new_row)
                    st.success(f"✅ 중복 차량 등록 완료: {full_plate}")
                else:
                    st.info("🚫 등록이 취소되었습니다.")
        else:
            phone = format_phone(raw_phone)
            now = datetime.now(kst)
            today = now.strftime("%Y-%m-%d")
            time_now = now.strftime("%Y-%m-%d %H:%M")
            new_row = [full_plate, phone, today, today, 1, f"{time_now} (1)"]
            worksheet.append_row(new_row)
            st.success(f"✅ 신규 고객 등록 완료: {full_plate}")